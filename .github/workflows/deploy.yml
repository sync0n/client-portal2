name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ACTIONS_STEP_DEBUG: true
      GITHUB_SHA: ${{ github.sha }}

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Check Docker Daemon
        run: docker info || { echo "Docker daemon not running"; exit 1; }

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
            | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }}

      - name: Build and Tag Docker Image
        run: |
          echo "Building Docker image with SHA: $GITHUB_SHA"
          docker build -t client-portal:$GITHUB_SHA .
          echo "Tagging image with SHA: $GITHUB_SHA and latest"
          docker tag client-portal:$GITHUB_SHA ${{ secrets.ECR_REPOSITORY_URI }}:$GITHUB_SHA
          docker tag client-portal:$GITHUB_SHA ${{ secrets.ECR_REPOSITORY_URI }}:latest

      - name: List Docker Images
        run: docker images

      - name: Push Docker Image to ECR
        run: |
          echo "Pushing Docker image with SHA tag"
          docker push ${{ secrets.ECR_REPOSITORY_URI }}:$GITHUB_SHA
          echo "Pushing Docker image with latest tag"
          docker push ${{ secrets.ECR_REPOSITORY_URI }}:latest

  deploy_staging:
    needs: build
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    env:
      ACTIONS_STEP_DEBUG: true

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to Staging
        run: |
          ssh -i ${{ secrets.STAGING_SSH_KEY }} ubuntu@${{ secrets.STAGING_HOST }} \
          "docker pull ${{ secrets.ECR_REPOSITORY_URI }}:latest && docker-compose up -d"

  deploy_production:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      ACTIONS_STEP_DEBUG: true

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to Production
        run: |
          ssh -i ${{ secrets.PRODUCTION_SSH_KEY }} ubuntu@${{ secrets.PRODUCTION_HOST }} \
          "docker pull ${{ secrets.ECR_REPOSITORY_URI }}:latest && docker-compose up -d"
