name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_SHA: ${{ github.sha }}

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Start Docker Build with SHA Tag
        run: |
          echo "Starting Docker build with SHA tag..."
          docker build --no-cache -t ${{ secrets.ECR_REPOSITORY_URI }}:$GITHUB_SHA .
          echo "Docker build with SHA tag completed."

      - name: Verify SHA Tagged Image Locally
        run: |
          echo "Verifying that Docker image with SHA tag exists locally..."
          docker image inspect ${{ secrets.ECR_REPOSITORY_URI }}:$GITHUB_SHA || { echo "SHA tag not found locally!"; exit 1; }

      - name: Tag Docker Image as 'latest'
        run: |
          echo "Tagging Docker image as 'latest'..."
          docker tag ${{ secrets.ECR_REPOSITORY_URI }}:$GITHUB_SHA ${{ secrets.ECR_REPOSITORY_URI }}:latest
          echo "Tagging complete."

  push_to_ecr:
    needs: build
    runs-on: ubuntu-latest
    env:
      GITHUB_SHA: ${{ github.sha }}

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
            | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }}

      - name: Push SHA Tagged Image to ECR
        run: |
          echo "Pushing SHA-tagged Docker image to ECR..."
          docker push ${{ secrets.ECR_REPOSITORY_URI }}:$GITHUB_SHA || { echo "Failed to push SHA-tagged image!"; exit 1; }

      - name: Push Latest Tagged Image to ECR
        run: |
          echo "Pushing 'latest'-tagged Docker image to ECR..."
          docker push ${{ secrets.ECR_REPOSITORY_URI }}:latest || { echo "Failed to push 'latest'-tagged image!"; exit 1; }
