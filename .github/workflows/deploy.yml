name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY_URI }}:$GITHUB_SHA .
          docker tag ${{ secrets.ECR_REPOSITORY_URI }}:$GITHUB_SHA ${{ secrets.ECR_REPOSITORY_URI }}:latest

  push_to_ecr:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
            | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }}

      - name: Push to ECR
        run: |
          docker push ${{ secrets.ECR_REPOSITORY_URI }}:$GITHUB_SHA
          docker push ${{ secrets.ECR_REPOSITORY_URI }}:latest

  deploy_staging:
    needs: push_to_ecr
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to Staging
        env:
          SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
        run: |
          echo "${SSH_KEY}" > staging_key.pem
          chmod 600 staging_key.pem
          ssh -i staging_key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.STAGING_HOST }} \
            "docker pull ${{ secrets.ECR_REPOSITORY_URI }}:latest && docker-compose up -d"
          rm staging_key.pem

  deploy_production:
    needs: push_to_ecr
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to Production
        env:
          SSH_KEY: ${{ secrets.PRODUCTION_SSH_KEY }}
        run: |
          echo "${SSH_KEY}" > production_key.pem
          chmod 600 production_key.pem
          ssh -i production_key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.PRODUCTION_HOST }} \
            "docker pull ${{ secrets.ECR_REPOSITORY_URI }}:latest && docker-compose up -d"
          rm production_key.pem
